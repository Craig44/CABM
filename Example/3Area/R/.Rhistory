#                      labels=c("no", "yes")) +
ggtitle("with movement")
#dev.off()
setwd("C:/Work/Software/IBM/Example/3Area/TestTagging/ibm")
library(reshape2)
library(cyrils)
library(ggplot2)
library(ibm)
tag_run = extract.run("output.log")
## look at the tagging release distribution
tag_run$Tagging$`1`$global_tag_release_age_distribution
par(mfrow = c(1,2))
barplot(as.numeric(tag_run$Tagging$`1`$global_tag_release_length_distribution[1,-c(1)]), names = colnames(tag_run$Tagging$`1`$global_tag_release_length_distribution)[-c(1)],
main = "Length distribution of Tag released", xlab = "Length (cm)")
barplot(as.numeric(tag_run$Tagging$`1`$global_tag_release_age_distribution[1,-c(1)]), names = colnames(tag_run$Tagging$`1`$global_tag_release_age_distribution)[-c(1)],
main = "Age distribution of Tag released", xlab = "Age")
## lets look at recaptures
EN_90 = tag_run$fishing$`1`$`census_info-1990-2-0`
dim(EN_90)
recap_90 = tag_run$fishing$`1`$`tag_recapture_info-1990-2-0-3098`
EN_91 = tag_run$fishing$`1`$`census_info-1991-2-0`
dim(EN_91)
tag_run = extract.run("vector.out")
## look at the tagging release distribution
tag_run$Tagging$`1`$global_tag_release_age_distribution
par(mfrow = c(1,2))
barplot(as.numeric(tag_run$Tagging$`1`$global_tag_release_age_distribution[1,-c(1)]), names = colnames(tag_run$Tagging$`1`$global_tag_release_age_distribution)[-c(1)],
main = "Age distribution of Tag released", xlab = "Age")
barplot(as.numeric(tag_run$Tagging$`1`$global_tag_release_length_distribution[1,-c(1)]), names = colnames(tag_run$Tagging$`1`$global_tag_release_length_distribution)[-c(1)],
main = "Length distribution of Tag released", xlab = "Length (cm)")
## lets look at recaptures
EN_90 = tag_run$fishing$`1`$`census_info-1990-2-0`
dim(EN_90)
recap_90 = tag_run$fishing$`1`$`tag_recapture_info-1990-2-0-3098`
recap_90
recap_90 = tag_run$fishing$`1`$`tag_recapture_info-1990-2-0`
recap_90
dim(EN_90)
EN_91 = tag_run$fishing$`1`$`census_info-1991-2-0`
dim(EN_91)
recap_91 = tag_run$fishing$`1`$`tag_recapture_info-1991-2-0`
dim(recap_91$values)
recap_91$values
setwd("C:/Work/Software/IBM/Example/3Area/TestTagging/ibm")
library(reshape2)
library(cyrils)
library(ggplot2)
library(ibm)
tag_run = extract.run("vector.out")
## look at the tagging release distribution
tag_run$Tagging$`1`$global_tag_release_age_distribution
par(mfrow = c(1,2))
barplot(as.numeric(tag_run$Tagging$`1`$global_tag_release_age_distribution[1,-c(1)]), names = colnames(tag_run$Tagging$`1`$global_tag_release_age_distribution)[-c(1)],
main = "Age distribution of Tag released", xlab = "Age")
barplot(as.numeric(tag_run$Tagging$`1`$global_tag_release_length_distribution[1,-c(1)]), names = colnames(tag_run$Tagging$`1`$global_tag_release_length_distribution)[-c(1)],
main = "Length distribution of Tag released", xlab = "Length (cm)")
## lets look at recaptures
EN_90 = tag_run$fishing$`1`$`census_info-1990-2-0`
dim(EN_90)
recap_90 = tag_run$fishing$`1`$`tag_recapture_info-1990-2-0`
EN_91 = tag_run$fishing$`1`$`census_info-1991-2-0`
dim(EN_91)
recap_91 = tag_run$fishing$`1`$`tag_recapture_info-1991-2-0`
dim(recap_91$values)
tag_run$fishing$`1`$`tag_recapture_info-1996-2-0`$values
setwd("C:/Work/Software/IBM/Example/3Area/TestTagging/ibm")
library(reshape2)
library(cyrils)
library(ggplot2)
library(ibm)
tag_run = extract.run("vector.out")
## look at the tagging release distribution
tag_run$Tagging$`1`$global_tag_release_age_distribution
par(mfrow = c(1,2))
barplot(as.numeric(tag_run$Tagging$`1`$global_tag_release_age_distribution[1,-c(1)]), names = colnames(tag_run$Tagging$`1`$global_tag_release_age_distribution)[-c(1)],
main = "Age distribution of Tag released", xlab = "Age")
barplot(as.numeric(tag_run$Tagging$`1`$global_tag_release_length_distribution[1,-c(1)]), names = colnames(tag_run$Tagging$`1`$global_tag_release_length_distribution)[-c(1)],
main = "Length distribution of Tag released", xlab = "Length (cm)")
tag_run = extract.run("tag.out")
## look at the tagging release distribution
tag_run$Tagging$`1`$global_tag_release_age_distribution
par(mfrow = c(1,2))
barplot(as.numeric(tag_run$Tagging$`1`$global_tag_release_age_distribution[1,-c(1)]), names = colnames(tag_run$Tagging$`1`$global_tag_release_age_distribution)[-c(1)],
main = "Age distribution of Tag released", xlab = "Age")
barplot(as.numeric(tag_run$Tagging$`1`$global_tag_release_length_distribution[1,-c(1)]), names = colnames(tag_run$Tagging$`1`$global_tag_release_length_distribution)[-c(1)],
main = "Length distribution of Tag released", xlab = "Length (cm)")
## lets look at recaptures
EN_90 = tag_run$fishing$`1`$`census_info-1990-2-0`
dim(EN_90)
recap_90 = tag_run$fishing$`1`$`tag_recapture_info-1990-2-0`
EN_91 = tag_run$fishing$`1`$`census_info-1991-2-0`
recap_90$scanned_fish
length(1990:2013)
0.13 / 0.1
0.13 * 0.5
0.13 * 0.7
0.13 * 0.1
0.1 / 0.13
0.3/ 0.13
0.4/ 0.13
0.25/ 0.13
0.20/ 0.13
setwd("C:/Work/Software/IBM/Example/3Area/TestTagging/ibm_time_vary/ibm")
library(reshape2)
library(cyrils)
library(ggplot2)
setwd("C:/Work/Software/IBM/Example/3Area/TestTagging/ibm_time_vary/")
library(reshape2)
library(cyrils)
setwd("C:/Work/Software/IBM/Example/3Area/TestTagging/ibm_time_vary")
setwd("C:/Work/Software/IBM/Example/3Area/TestTagging/ibm_time_vary_M")
library(reshape2)
library(cyrils)
library(ggplot2)
library(ibm)
run = extract.run("run.log")
run1 = extract.run("run1.log")
run = extract.run("run.log")
run1 = extract.run("run1.log")
run1 = extract.run("run1.log")
names(run1)
## look at the M on each value
plot.derived_quantities(run1,"derived_quants")
run1$agents$`1`$values$M
mean(run1$agents$`1`$values$M)
mean(run1$agents$`2`$values$M)
mean(run1$agents$`1`$values$M)
mean(run1$agents$`2`$values$M)
mean(run1$agents$`3`$values$M)
mean(run1$agents$`4`$values$M)
mean(run1$agents$`5`$values$M)
mean(run1$agents$`6`$values$M)
time_vary_block = run1$time_vary_M$`1`$time_var_m
time_vary_block
i = 1
time_vary_block = run1$time_vary_M$`1`$time_var_m
time_vary_block
average_m = vector();
temp = run1$agents[[i]]
temp
mean(temp$values$M)
average_m = vector();
for (i in 1:nrow(time_vary_block)) {
temp = run1$agents[[i]]
average_m[i] = mean(temp$values$M)
}
head(time_vary_block)
run = extract.run("run.log")
time_vary_block = run$time_vary_M$`1`$time_var_m
average_m = vector();
for (i in 1:nrow(time_vary_block)) {
temp = run$agents[[i]]
average_m[i] = mean(temp$values$M)
}
plot(time_vary_block$year, time_vary_block$Value, type = "l", lwd = 2, xlab = "Year", ylab = "Mean M value", ylim = c(0,0.35), main = "time varying M")
average_m
lines(time_vary_block$year, average_m, col = "red", lwd = 2)
run = extract.run("run.log")
time_vary_block = run$time_vary_M$`1`$time_var_m
average_m = vector();
for (i in 1:nrow(time_vary_block)) {
temp = run$agents[[i]]
average_m[i] = mean(temp$values$M)
}
plot(time_vary_block$year, time_vary_block$Value, type = "l", lwd = 2, xlab = "Year", ylab = "Mean M value", ylim = c(0,0.35), main = "time varying M")
lines(time_vary_block$year, average_m, col = "red", lwd = 2)
run = extract.run("run.log")
time_vary_block = run$time_vary_M$`1`$time_var_m
average_m = vector();
for (i in 1:nrow(time_vary_block)) {
temp = run$agents[[i]]
average_m[i] = mean(temp$values$M)
}
plot(time_vary_block$year, time_vary_block$Value, type = "l", lwd = 2, xlab = "Year", ylab = "Mean M value", ylim = c(0,0.35), main = "time varying M")
lines(time_vary_block$year, average_m, col = "red", lwd = 2)
run = extract.run("run.log")
getwd()
## look at the M on each value
plot.derived_quantities(run,"derived_quants")
time_vary_block = run$time_vary_M$`1`$time_var_m
time_vary_block
average_m = vector();
for (i in 1:nrow(time_vary_block)) {
temp = run$agents[[i]]
average_m[i] = mean(temp$values$M)
}
plot(time_vary_block$year, time_vary_block$Value, type = "l", lwd = 2, xlab = "Year", ylab = "Mean M value", ylim = c(0,0.35), main = "time varying M")
lines(time_vary_block$year, average_m, col = "red", lwd = 2)
run = extract.run("run.log")
## look at the M on each value
plot.derived_quantities(run,"derived_quants")
time_vary_block = run$time_vary_M$`1`$time_var_m
average_m = vector();
for (i in 1:nrow(time_vary_block)) {
temp = run$agents[[i]]
average_m[i] = mean(temp$values$M)
}
time_vary_block
getwd()
run = extract.run("run.log")
run = extract.run("run.log")
## look at the M on each value
plot.derived_quantities(run,"derived_quants")
time_vary_block = run$time_vary_M$`1`$time_var_m
average_m = vector();
for (i in 1:nrow(time_vary_block)) {
temp = run$agents[[i]]
average_m[i] = mean(temp$values$M)
}
plot(time_vary_block$year, time_vary_block$Value, type = "l", lwd = 2, xlab = "Year", ylab = "Mean M value", ylim = c(0,0.35), main = "time varying M")
lines(time_vary_block$year, average_m, col = "red", lwd = 2)
run = extract.run("run.log")
time_vary_block = run$time_vary_M$`1`$time_var_m
## compare what we want with a range of M values for the assigned agents.
average_m = vector();
for (i in 1:nrow(time_vary_block)) {
temp = run$agents[[i]]
average_m[i] = mean(temp$values$M)
}
dev.off()
time_vary_block = run$time_vary_M$`1`$time_var_m
## compare what we want with a range of M values for the assigned agents.
average_m = vector();
for (i in 1:nrow(time_vary_block)) {
temp = run$agents[[i]]
average_m[i] = mean(temp$values$M)
}
average_m
plot(time_vary_block$year, time_vary_block$Value, type = "l", lwd = 2, xlab = "Year", ylab = "Mean M value", ylim = c(0,0.35), main = "time varying M")
lines(time_vary_block$year, average_m, col = "red", lwd = 2, lty = 2)
abline(h = 0.13, col ="blue", lwd =2, lty = 2)
legend("topright", legend = c("input Mean M", "Average M over 1000 agents", "initialised M"), col = c("black","red","blue"), lwd = 2)
dplot()
?dplot
actual_m = matrix(0,nrow = nrow(run$agents$'1'$values), ncol =nrow(time_vary_block)) ;
actual_m = matrix(0,nrow = nrow(run$agents$'1'$values), ncol =nrow(time_vary_block)) ;
for (i in 1:nrow(time_vary_block)) {
temp = run$agents[[i]]
actual_m[,1] = temp$values$M
average_m[i] = mean(temp$values$M)
}
dplot()
dplot(actual_m)
cyrils::dplot
dplot(x = actual_m)
dplot(x = t(actual_m))
## compare what we want with a range of M values for the assigned agents.
average_m = vector();
actual_m = matrix(0,nrow = nrow(run$agents$'1'$values), ncol =nrow(time_vary_block)) ;
for (i in 1:nrow(time_vary_block)) {
temp = run$agents[[i]]
actual_m[,i] = temp$values$M
average_m[i] = mean(temp$values$M)
}
dplot(x = t(actual_m))
dplot(x = actual_m)
actual_m
boxplot(actual_m)
colnames(actual_m) = time_vary_block$year
melt_M = melt(actual_m)
names(melt_M)
melt_M$Var1
head(melt_M)
colnames(melt_M) = c("individual","year","M")
ggplot(melt_M, aes = c(x = year, y = M)) +
geom_boxplot()
ggplot(melt_M, aes(x = year, y = M)) +
geom_boxplot()
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot()
stat_function
?stat_function
time_vary_block
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = as.factor(year), y = Value, group = 1))
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1))
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, size = 2, col = "red"))
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, size = 1, col = "red"))
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, size = 0.6, col = "red"))
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 0.6)
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6)
?hline
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(0.13, size = 1.2, col ="blue")
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(0.13, color ="blue")
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue")
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2)
run$selectivity_M$`1`$Values
run$selectivity_M$`1`$Values * 0.13
df_by_age = rbind(run$selectivity_M$`1`$Values * 0.13, run$selectivity_M$`1`$Values * 0.1, run$selectivity_M$`1`$Values *0.25)
df_by_age
rownames(df_by_age) = c(0.13, 0.1,0.25)
df_by_age
df_by_age_melted = melt(df_by_age)
df_by_age_melted
df_by_age = rbind(run$selectivity_M$`1`$Values * 0.13, run$selectivity_M$`1`$Values * 0.1, run$selectivity_M$`1`$Values *0.25)
rownames(df_by_age) = c(0.13, 0.1,0.25)
df_by_age_melted = melt(df_by_age)
colnames(df_by_age_melted) = c("M", "age", "value_by_age")
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, color = M)) +
geom_line(size = 1.4)
m_by_age
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, group = M,color = M)) +
geom_line(size = 1.4)
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, color = as.factor(M))) +
geom_line(size = 1.4)
ggplot(df_by_age_melted, aes(x = age, y = value_by_age, color = as.factor(M))) +
geom_line(size = 1.4)
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, color = as.factor(M))) +
geom_line(size = 1.4) +
discrete_scale(name = "Mean M values")
?discrete_scale
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, color = as.factor(M))) +
geom_line(size = 1.4) +
scale_fill_discrete(name = "Mean M values")
m_by_age
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, group = as.factor(M))) +
geom_line(size = 1.4) +
scale_fill_discrete(name = "Mean M values")
m_by_age
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, group = as.factor(M), color = as.factor(M))) +
geom_line(size = 1.4) +
scale_fill_discrete(name = "Mean M values")
m_by_age
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, group = as.factor(M), color = as.factor(M))) +
geom_line(size = 1.4) +
scale_fill_discrete(name = "M") +
ylab("M by age")
m_by_age
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, group = as.factor(M), color = as.factor(M))) +
geom_line(size = 1.4) +
scale_colour_discrete(name = "M") +
ylab("M by age")
m_by_age
facet_wrap(m_by_year,m_by_age)
grid.arrange(m_by_year,m_by_age)
library(gridExtra)
grid.arrange(m_by_year,m_by_age)
colnames(actual_m) = time_vary_block$year
melt_M = melt(actual_m)
head(melt_M)
colnames(melt_M) = c("individual","year","M")
m_by_year = ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2)
df_by_age = rbind(run$selectivity_M$`1`$Values * 0.13, run$selectivity_M$`1`$Values * 0.1, run$selectivity_M$`1`$Values *0.25)
rownames(df_by_age) = c(0.13, 0.1,0.25)
df_by_age_melted = melt(df_by_age)
colnames(df_by_age_melted) = c("M", "age", "value_by_age")
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, group = as.factor(M), color = as.factor(M))) +
geom_line(size = 1.4) +
scale_colour_discrete(name = "Mean M") +
ylab("M by age")
grid.arrange(m_by_year,m_by_age)
grid.arrange(m_by_year,m_by_age, nrow =1)
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_fill_manual(name="Key",values=c("input value", "initialised vallue","Agent values"), color = c("red","blue","black"), guide="none")
m_by_year = ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_fill_manual(name="Key",values=c("input value", "initialised vallue","Agent values"), colors = c("red","blue","black"), guide="none")
?
?scale_fill_manual
m_by_year = ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_fill_manual(name="Key",values=c("input value", "initialised vallue","Agent values"), colors = c("red","blue","black"))
m_by_year = ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_fill_manual(name="Key",values=c("input value", "initialised vallue","Agent values"), aes(colors = c("red","blue","black")))
m_by_year
m_by_year = ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_fill_manual(name="Key",values=c("input value", "initialised vallue","Agent values"),
aes(color = c("red","blue","black")))
m_by_year
m_by_year = ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_fill_manual(name="Key",values=c("input value", "initialised vallue","Agent values"),
aes(color = c("red","blue","black")), guide = "none")
m_by_year
m_by_year = ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_color_manual(name="Key",values=c("input value", "initialised vallue","Agent values"),
aes(color = c("red","blue","black")), guide = "none")
m_by_year
m_by_year = ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_color_manual(name="Key",values=c("input value", "initialised vallue","Agent values"),
aes(color = c("red","blue","black")))
m_by_year
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2)
m_by_year = ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_color_manual(name="Key",values=c("input value", "initialised vallue","Agent values"),
aes(color = c("red","blue","black")))
#m_by_year =
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_color_manual(name="Key",values=c("input value", "initialised vallue","Agent values"),
aes(color = c("red","blue","black")))
#m_by_year =
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_color_manual(name="Key",values=c("red","blue","black")) #c("input value", "initialised vallue","Agent values"),
#m_by_year =
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_color_manual(name="Key",values=c("red","blue","black"), guide = "none") #c("input value", "initialised vallue","Agent values"),
#m_by_year =
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_color_manual(name="Key",values=c("red","blue","black"), guide = "true") #c("input value", "initialised vallue","Agent values"),
#m_by_year =
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_color_manual(name="Key",values=c("red","blue","black"), guide = "") #c("input value", "initialised vallue","Agent values"),
#m_by_year =
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_colour_manual(name="Key",
values=c("input value"="red",  "initialised vallue"="blue", "Agent values"="black"))
values=c("input value"="red",  "initialised vallue"="blue", "Agent values"="black")
values
#m_by_year =
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
scale_colour_manual(name="Key",values=c("red","blue","black"))
#m_by_year =
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
theme(legend.position="none")
colnames(actual_m) = time_vary_block$year
melt_M = melt(actual_m)
head(melt_M)
colnames(melt_M) = c("individual","year","M")
m_by_year =
ggplot(melt_M, aes(x = year, y = M, group = year)) +
geom_boxplot() +
geom_line(data = time_vary_block,aes(x = year, y = Value, group = 1, col = "red"), size = 1.6) +
geom_hline(yintercept =0.13, color ="blue", size = 1.2) +
theme(legend.position="none")
df_by_age = rbind(run$selectivity_M$`1`$Values * 0.13, run$selectivity_M$`1`$Values * 0.1, run$selectivity_M$`1`$Values *0.25)
rownames(df_by_age) = c(0.13, 0.1,0.25)
df_by_age_melted = melt(df_by_age)
colnames(df_by_age_melted) = c("M", "age", "value_by_age")
m_by_age = ggplot(df_by_age_melted, aes(x = age, y = value_by_age, group = as.factor(M), color = as.factor(M))) +
geom_line(size = 1.4) +
scale_colour_discrete(name = "Mean M") +
ylab("M by age")
grid.arrange(m_by_year,m_by_age, nrow =1)

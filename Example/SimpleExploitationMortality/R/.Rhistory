file_name = file.path(u_layer_dir, paste0(fishery_labs[f], "_U_", fish_years[i], ".ibm"))
create_ibm_layer(label = paste0(fishery_labs[f], "_U_", fish_years[i]), type = "numeric", filename = file_name, Matrix = matrix(fish_us[i, f], nrow = 1))
include_names = c(include_names, paste0("!include Layers/U_layers/", file_name))
temp_record = c(temp_record, paste0(fishery_labs[f], "_U_", fish_years[i]))
}
u_config_table = rbind(u_config_table, temp_record)
}
temp_record = matrix(temp_record, ncol =3)
temp_record
u_config_table = matrix(u_config_table, ncol =3)
u_config_table
write.table((u_config_table), file = file.path(abm_dir, paste0("Fishing_u_table.ibm")), quote = F, row.names = F, col.names = F)
u_layer_dir
normalizePath(file.path(abm_layer_dir, "U_layers"))
abm_layer_dir
include_names = c()
u_config_table = NULL
for(i in 1:length(fish_years)) {
temp_record = c(fish_years[i])
for(f in 1:length(fishery_labs)) {
file_name = file.path(u_layer_dir, paste0(fishery_labs[f], "_U_", fish_years[i], ".ibm"))
create_ibm_layer(label = paste0(fishery_labs[f], "_U_", fish_years[i]), type = "numeric", filename = file_name, Matrix = matrix(fish_us[i, f], nrow = 1))
include_names = c(include_names, paste0("!include Layers/U_layers/", paste0(fishery_labs[f], "_U_", fish_years[i], ".ibm")))
temp_record = c(temp_record, paste0(fishery_labs[f], "_U_", fish_years[i]))
}
u_config_table = rbind(u_config_table, temp_record)
}
include_names
write.table((include_names), file = file.path(abm_dir, paste0("includes.ibm")), quote = F, row.names = F, col.names = F)
cas$Recruitment$r0
## Read in Casal2 output
detach("package:ibm", unload=TRUE)
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(casal2)
setwd("../Casal2")
getwd()
## Read in Casal2 output
detach("package:ibm", unload=TRUE)
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("output.log")
## Read in Casal2 output
detach("package:ibm", unload=TRUE)
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "derived_quants", plot.it = F)
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = "red", xlab = "years", ylab = "SSB (t)", ylim = c(0,36000))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = "red", xlab = "years", ylab = "SSB (t)", ylim = c(0,96000))
lines(years, cas2_dq[,"SSB"], lwd = 2, col = "blue")
cas2_dq
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = "blue")
abm_col = "red"
cas_col = "black"
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plot.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = "red", xlab = "years", ylab = "SSB (t)", ylim = c(0,96000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = "blue")
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
## lets l
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,96000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
## lets look at fishing
ibm_comp = ibm$fishing$`1`$age_frequency
ibm_comp
## lets look at fishing
ibm_comp = ibm$fishing$`age_freq-FishingEast`
## look at age frequencies
casal2_model = as.numeric(cas2$Init$`1`$values[2:32] / sum(cas2$Init$`1`$values[2:32]))
casal2_model
cas2$init_part$values
dim(cas2$init_part$values)
## look at age frequencies
casal2_model = as.numeric(cas2$init_part$values[2:31] / sum(cas2$init_part$values[2:31]))
ibm_model = as.numeric(ibm$init_2$values[2:31] / sum(ibm$init_2$values[2:31]))
ibm$init_2$values
## look at age frequencies
casal2_model = as.numeric(cas2$init_part$values[2:31] / sum(cas2$init_part$values[2:31]))
ibm_model = as.numeric(ibm$init_2$values / sum(ibm$init_2$values))
## reformat for GGPLOT
new_data = melt(data.frame(casal2_model,ibm_model,ibm_model2), variable.name = "model")
## reformat for GGPLOT
new_data = melt(data.frame(casal2_model,ibm_model), variable.name = "model")
## reformat for GGPLOT
new_data = melt(data.frame(casal2_model,ibm_model), variable.name = "model")
new_data$age = c(1:30,1:30)
ggplot(new_data,aes(x=age,y=value,fill=model))+
geom_bar(stat="identity",position="dodge")+
scale_fill_discrete(name="Model",
labels=c("Casal2", "IBM","IBM latest"))+
xlab("Age")+ylab("Proportion") +
ggtitle("Initial age distribution")
## look at age frequencies
casal2_model = as.numeric(cas2$init_part$values[2:31] / sum(cas2$init_part$values[2:31]))
ibm_model = as.numeric(ibm$init_2$values / sum(ibm$init_2$values))
## reformat for GGPLOT
new_data_prop = melt(data.frame(casal2_model,ibm_model), variable.name = "model")
new_data_prop$age = c(1:30,1:30)
new_data = melt(data.frame(cas2$init_part$values[2:31],ibm$init_2$values), variable.name = "model")
new_data$age = c(1:30,1:30)
ggplot(new_data_prop,aes(x=age,y=value,fill=model))+
geom_bar(stat="identity",position="dodge")+
scale_fill_discrete(name="Model",
labels=c("Casal2", "IBM","IBM latest"))+
xlab("Age")+ylab("Proportion") +
ggtitle("Initial age distribution")
ggplot(new_data,aes(x=age,y=value,fill=model))+
geom_bar(stat="identity",position="dodge")+
scale_fill_discrete(name="Model",
labels=c("Casal2", "IBM","IBM latest"))+
xlab("Age")+ylab("Proportion") +
ggtitle("Initial age distribution")
View(new_data)
data.frame(cas2$init_part$values[2:31],ibm$init_2$values)
data.frame(casal2_model,ibm_model)
new_data = melt(data.frame(cbind(cas2$init_part$values[2:31],ibm$init_2$values)), variable.name = "model")
new_data$age = c(1:30,1:30)
new_data
new_data_prop
## reformat for GGPLOT
new_data_prop = melt(data.frame(casal2_model,ibm_model), variable.name = "model")
new_data_prop$age = c(1:30,1:30)
casal2_model = as.numeric(cas2$init_part$values[2:31])
ibm_model = as.numeric(ibm$init_2$values )
new_data = melt(data.frame(casal2_model,ibm_model), variable.name = "model")
new_data$age = c(1:30,1:30)
ggplot(new_data,aes(x=age,y=value,fill=model))+
geom_bar(stat="identity",position="dodge")+
scale_fill_discrete(name="Model",
labels=c("Casal2", "IBM","IBM latest"))+
xlab("Age")+ylab("Proportion") +
ggtitle("Initial age distribution")
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,96000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
#
## look at Recruitment
cas2$Recruitment$standardised_ycs
cas2$Recruitment$ycs_values
## look at Recruitment
paste0(round(cas2$Recruitment$standardised_ycs,3),collapse = " "
)
## look at Recruitment
paste0(round(cas2$Recruitment$standardised_ycs,3),collapse = " ")
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,96000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
## look at Recruitment
paste0(round(cas2$Recruitment$standardised_ycs,3),collapse = " ")
cas2$Recruitment$ycs_values
plot(cas2$Recruitment$ycs_years, cas2$Recruitment$standardised_ycs, type = "o", col = cas_col, lwd = 3)
lines(ibm$Rec$years,ibm$Rec$ycs_values, type = "o", col = abm_col, lwd = 3)
library(Casal2)
library(r4Casal2)
library(ibm)
cas = extract.mpd(file = "run.log", path = file.path("..", "Casal2"))
abm_dir = file.path("..", "ibm")
abm_layer_dir = file.path(abm_dir, "Layers")
cas$Recruitment$r0
len_bins = seq(from = 2, 140, by = 2)
paste0(len_bins, collapse = " ")
#########
## Recruitment
###########
paste0(round(cas$Recruitment$standardised_ycs,3),collapse = " ")
#########
detach("package:ibm", unload=TRUE)
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
plot(cas2$Recruitment$ycs_years, cas2$Recruitment$standardised_ycs, type = "o", col = cas_col, lwd = 3)
lines(ibm$Rec$years,ibm$Rec$ycs_values, type = "o", col = abm_col, lwd = 3)
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
detach("package:ibm", unload=TRUE)
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
detach("package:ibm", unload=TRUE)
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
detach("package:ibm", unload=TRUE)
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
detach("package:ibm", unload=TRUE)
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
cas2_dq
## look at Growth
cas2$agelength_1$'1975'
## look at Growth
plot(ages, cas2$agelength_1$'1975'$mean_length_at_age, type = "l", lwd = 3, col = cas_col)
ages = 1:30
## look at Growth
plot(ages, cas2$agelength_1$'1975'$mean_length_at_age, type = "l", lwd = 3, col = cas_col)
points( ibm$agents_1$'1976'$values$age, ibm$agents_1$'1976'$values$length, pch = 16, col = cas_col)
## look at Growth
plot(ages, cas2$agelength_1$'1975'$mean_length_at_age, type = "l", lwd = 3, col = cas_col)
points( ibm$agents_1$'1976'$values$age, ibm$agents_1$'1976'$values$length, pch = 16, col = abm_col)
## look at Growth
par(mfrow = c(1,3))
plot(ages, cas2$agelength_1$'1975'$mean_length_at_age, type = "l", lwd = 3, col = cas_col)
points( ibm$agents_1$'1976'$values$age, ibm$agents_1$'1976'$values$length, pch = 16, col = abm_col)
## look at Growth
par(mfrow = c(1,3))
plot(ages, cas2$agelength_1$'1975'$mean_length_at_age, type = "l", lwd = 3, col = cas_col)
points( ibm$agents_1$'1976'$values$age, ibm$agents_1$'1976'$values$length, pch = 16, col = abm_col)
plot(ages, cas2$agelength_2$'1975'$mean_length_at_age, type = "l", lwd = 3, col = cas_col)
points( ibm$agents_2$'1976'$values$age, ibm$agents_2$'1976'$values$length, pch = 16, col = abm_col)
plot(ages, cas2$agelength_3$'1975'$mean_length_at_age, type = "l", lwd = 3, col = cas_col)
points( ibm$agents_3$'1976'$values$age, ibm$agents_3$'1976'$values$length, pch = 16, col = abm_col)
cas2$agelength_2$'1975'$mean_length_at_age
cas2$agelength_3$'1975'$mean_length_at_age
cas2$agelength_1$'1975'$mean_length_at_age
## Read in Casal2 output
detach("package:ibm", unload=TRUE)
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
ages = 1:50
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## this script is just comparing, steady state models just constant recruitment and M
library(ggplot2)
library(reshape2)
library(Casal2)
setwd("../Casal2")
cas2 = extract.mpd("run.log")
cas2_dq = plot.derived_quantities(cas2, report_label = "biomass_t1", plot.it = F)
## Read in the IBM output
setwd("../ibm")
library(ibm)
ibm = extract.run("run.log")
#ibm2 = extract.run("run.log")
abm_col = "red"
cas_col = "black"
names(ibm)
ibm_dq = plot.derived_quantities(ibm, report_label = "derived_quants", plot.it = F)
#ibm_dq2 = plot.derived_quantities(ibm2, report_label = "derived_quants", plot.it = F)
#ibm_dq3 = plots.derived_quantities(ibm3, report_label = "derived_quants", plot.it = F)
## compare SSB's
years = as.numeric(rownames(ibm_dq))
plot(years, ibm_dq[,"SSB"], type = "l", lwd = 2, col = abm_col, xlab = "years", ylab = "SSB (t)", ylim = c(0,120000))
lines(years, cas2_dq[,"biomass_t1"], lwd = 2, col = cas_col)
#lines(years, ibm_dq3[,"SSB"], lwd = 2, lty = 2, col = "orange")
legend('bottomleft', legend = c("ABM", "Casal2"), col = c(abm_col,cas_col), lty = c(1,1,1),lwd = 2)
cas2 = extract.mpd("run.log")
cas2 = extract.mpd("run.log")
cas2 = extract.mpd("run.log")
cas2 = extract.mpd("run.log")
cas2 = extract.mpd("run.log")
cas2 = extract.mpd("run.log")
cas2 = extract.mpd("run.log")
cas2 = extract.mpd("run.log")
cas2 = extract.mpd("run.log")
cas2 = extract.mpd("run.log")
